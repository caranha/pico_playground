pico-8 cartridge // http://www.pico-8.com
version 39
__lua__

dr = {{1,0},{-1,0},{0,1},{0,-1}}
visitwalls = {}
visitfloors = {}
doors = {}

function floodfill()
	add(visitfloors,{0, 0})
	floor = 6

	while #visitfloors > 0 do
		v = rnd(visitfloors)
		vx,vy = v[1],v[2]
		vt = mget(v[1],v[2])
		del(visitfloors,v)
		if mid(0,vx,15)!=vx or mid(0,vy,15)!=vy then
			x=1		
		elseif vt == 0 then
			mset(vx,vy,floor)
			for d in all(dr) do
				add(visitfloors,{vx+d[1],vy+d[2]})
			end
		elseif vt == 1 then
			add(visitwalls,{vx,vy})
		end
		
		if #visitfloors == 0 then
			floor = 2
			while #visitfloors == 0 and #visitwalls > 0 do
			 w = visitwalls[#visitwalls]
			 del(visitwalls, w)
			 for d in all(dr) do
			 	if mget(w[1]+d[1],w[2]+d[2]) == 0 then
			 		mset(w[1],w[2],3)
			 		add(doors,{w[1],w[2]})
			 		add(visitfloors,{w[1]+d[1],w[2]+d[2]})
			 	end
			 end
			end
		end
	end
end

function _init()
	printh("start")
-- 1. walls and floor
	n = rnd({1,1,2,2,3})
	for i=1,n do
		x = 1+flr(rnd(8))
		y = 1+flr(rnd(8))
		sx = 4+flr(rnd(3))
		sy = 4+flr(rnd(3))
		
		for _x=0,sx do
			for _y=0,sy do
				if _x==0 or _x==sx or _y==0 or _y==sy then
					mset(x+_x,y+_y,1)
				else
					mset(x+_x,y+_y,0)
				end
			end
		end
	end
-- 2. floodfill grass
-- 3. place doors
	floodfill()

-- 4. place path
for door in all(doors) do
	for d in all(dr) do
		if mget(door[1]+d[1],door[2]+d[2])==6 then
			nxt = {door[1]+d[1],door[2]+d[2]}
			while mget(nxt[1],nxt[2])==6 do
				mset(nxt[1],nxt[2],38)
				nxt = {nxt[1]+d[1],nxt[2]+d[2]}
				if (d[1] == 0) nxt[1] = nxt[1] + rnd(.2) - 0.1
				if (d[2] == 0) nxt[2] = nxt[2] + rnd(.2) - 0.1
			end			
		end
	end
end

-- 5. place well near path
for i=1,100 do
	_x,_y = flr(rnd(16)),flr(rnd(16))
	if mget(_x,_y) == 6 then
		for d in all(dr) do
			if (mget(_x+d[1],_y+d[2])==38) mset(_x,_y,54)
		end
		if (mget(_x,_y)==54) break
	end
end



-- 6. place shrubs
for i=1,7 do
 _x,_y = flr(rnd(16)),flr(rnd(16))
 s = 2+flr(rnd(2))
 while s > 0 do
 	if (mget(_x,_y) == 6) mset(_x,_y,22)
 	d = rnd(dr)
 	_x=_x+d[1]
 	_y=_y+d[2]
 	s = s-1
 end
end


-- 7. place beds
-- 8. place bookshelves

for i=1,6 do
	for j=1,100 do
		allow,deny = false,false
 	_x,_y = flr(rnd(16)),flr(rnd(16))
 	
 	if mget(_x,_y) == 2 then
 		for d in all(dr) do
 			if (mget(_x+d[1],_y+d[2])==3) deny = true
 			if mget(_x+d[1],_y+d[2])==1 and mget(_x-d[1],_y-d[2])==2 then
		 		allow=true
 			end
 		end
 	end
 	
 	if allow and not deny then
			mset(_x,_y,i%2==0 and 20 or 4)
			break 		
 	end	
	end
end

-- 9. place tables and chairs
for i=1,4 do
	for j=1,100 do
		allow,deny = false,false
 	_x,_y = flr(rnd(16)),flr(rnd(16))
 	
 	if mget(_x,_y) == 2 then
 		allow = true
 		for d in all(dr) do
 			if (mget(_x+d[1],_y+d[2])!=2) deny = true
 		end
 	end
 	
 	if allow and not deny then
			mset(_x,_y,5)
			for k=1,4 do
				d = rnd(dr)
				mset(_x+d[1],_y+d[2],21)
			end
			break 		
 	end	
	end
end



end

function _draw()
	cls()
	map(0,0,0,0,16,16)
end
__gfx__
000000008588858894949494851111889511115494949494bbbbbbbb000000000000000000000000000000000000000000000000000000000000000000000000
000000008588858849494949814444184577775949494949bbbbbbbb000000000000000000000000000000000000000000000000000000000000000000000000
007007008588858894949494114444119177771491555514bbbbbbbb000000000000000000000000000000000000000000000000000000000000000000000000
000770005555555549494949144444414188881945555559bbbbbbbb000000000000000000000000000000000000000000000000000000000000000000000000
000770008885888594949494144444419188881495555554bbbbbbbb000000000000000000000000000000000000000000000000000000000000000000000000
007007008885888549494949144414414188881941555519bbbbbbbb000000000000000000000000000000000000000000000000000000000000000000000000
000000008885888594949494144444419188881491949414bbbbbbbb000000000000000000000000000000000000000000000000000000000000000000000000
000000005555555549494949111111114511115941494919bbbbbbbb000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000009551155494949494bbbbbbbb000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000001551125149494949bbbbbbbb000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000001441144194949494bbb333bb000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000015811b8149494949b333333b000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000001441144194dddd9433383333000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000001a511531491dd14938333833000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000144114419414919433333333000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000004949494949494949b33333bb000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000003b5b3b5b000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000b335b5b3000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000005b3b5b5b000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000b5b5b5b3000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000003b5b335b000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000b5b5b5b5000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000005b535b5b000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000b533b3b5000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000bbbbbbbb000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000b555555b000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000055cccc55000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000051111115000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000055cccc55000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000555cc555000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000035555553000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000b355553b000000000000000000000000000000000000000000000000000000000000000000000000
